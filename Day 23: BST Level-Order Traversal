if (root == NULL) {
            return;
        }

        // Use a queue for level-order traversal
        queue<Node*> q;
        q.push(root);

        while (!q.empty()) {
            Node* current = q.front();
            cout << current->data << " ";

            if (current->left != NULL) {
                q.push(current->left);
            }
            if (current->right != NULL) {
                q.push(current->right);
            }

            q.pop();
        }
    }
